
<<usage example>>=
slurp_to=`temporary_file`
tmpfiles="${tmpfiles:+${tmpfiles} }'${slurp_to}'"
@

<<function temporary_file>>=
tmpfiles=

rm_tmpfiles(){
    eval "set -- ${tmpfiles}"
    rm -f -- "$@"
}

# 0:exit, 1:hup, 2:int, 3:quit, 15:term
trap 'rm_tmpfiles' 0 1 2 3 15

u0Aa(){
<<u0Aa core>> |
    head -n"${1}" | perl -pe chomp; }

r0Aa(){
<<r0Aa core>> |
    head -n"${1}" | perl -pe chomp; }

create_safe_file(){
    ( umask 0177; : >"${1}" )
}

# mktemp isn't portable, can't use it
temporary_file(){
    if command -v perl >/dev/null 2>&1 && test -r /dev/urandom; then
        tmpfile="/tmp/tmp.`u0Aa 10`${1:-}"
        create_safe_file "${tmpfile}"
    elif command -v perl >/dev/null 2>&1; then
        tmpfile="/tmp/tmp.`r0Aa 12`${1:-}"
        create_safe_file "${tmpfile}"
    else
        die 1 'error: mktemp not found'
    fi
    echo "${tmpfile}"
}
@

<<u0Aa core>>=
perl -le'
@map = map {chr} 48..57, 65..90, 97..122;
while (read(STDIN,$d,64)) {
    for $x (unpack(q{C*},$d)) {
        next if $x >= @map;
        print $map[$x];
    }
}' </dev/urandom
@

<<r0Aa core>>=
perl -le'
@map = map {chr} 48..57, 65..90, 97..122;
sub r{int(rand(scalar(@map)))}
for (;;) { print $map[r] }'
@

<<u0Aa.sh>>=
#!/bin/sh
# generated from temporary-files-shell.nw
exec \
<<u0Aa core>>
@

<<r0Aa.sh>>=
#!/bin/sh
# generated from temporary-files-shell.nw
exec \
<<r0Aa core>>
@

nofake -R'generate u0Aa.sh and r0Aa.sh' temporary-files-shell.nw

<<generate u0Aa.sh and r0Aa.sh>>=
CHMOD='chmod 0555' nofake.sh --error -Ru0Aa.sh -ou0Aa.sh temporary-files-shell.nw
CHMOD='chmod 0555' nofake.sh --error -Rr0Aa.sh -or0Aa.sh temporary-files-shell.nw
@
