
Limit the responsibilities of Makefile and delegate the heavy work back to
sh/nofake as soon as possible.

To generate/update Makefile, simply do:

    nofake Makefile.nw | sh

<<Makefile prefix>>=
Makefile
@

<<sources>>=
<<Makefile prefix>>.nw create-config.nw nofake-exec.nw
repl.nw git-last-modified.nw nwsplit.nw tokenize.nw
detokenize.nw localely.nw encrypt.nw feh-smart-latest.nw
cstrng.nw
@

<<priority targets>>=

<<*>>=
#!/bin/sh
set -eu
SH=${SH:-sh -eu}; export SH
<<function cmd_push_to_argv>>
<<function list_set_sources>>
#@<<gen build.sh>>
eval "set --; `list_set_sources`"
nofake --error -R'generate Makefile' "$@" | ${SH} ><<Makefile prefix>>
@

<<gen build.sh>>=
set -- <<Makefile prefix>>.nw
nofake --error -R'generate build.sh' "$@" | ${SH}
@

<<function cmd_push_to_argv>>=
cmd_push_to_argv(){
    normalize-args.sh | perl -lpe'$_=qq{set -- \042\$\@\042 ${_};}' |
        LC_ALL=C sort -u
}
@

<<function list_set_sources>>=
list_set_sources(){
    cat<<'EOF' | cmd_push_to_argv
<<sources>>
EOF
}
@

<<function indent_args>>=
indent_args(){
    perl -le'
        sub backslash(){ scalar(@ARGV) ? q{ \\} : q{} }
        while (my @a = splice(@ARGV, 0, 5)) {
            print(q{    }, join(q{ }, @a), backslash);
        }' -- "$@"
}
@

<<indent "$@">>=
indent_args "$@"
@

<<output TARGETS=>>=
set --
<<targets>>
printf -- 'TARGETS = \\\n'
<<indent "$@">>
printf -- '\n'
@

<<output PRIORITY_TARGETS=>>=
set --
<<priority targets>>
if [ $# -gt 0 ]; then
    printf -- 'PRIORITY_TARGETS = \\\n'
    <<indent "$@">>
    printf -- '\n'
fi
@

<<output all:>>=
set --
<<priority targets>>
<<targets>>
printf -- '.PHONY: all\nall: $(ALL_TARGETS)\n\n'
for target; do
    printf '%s: \\\n' "${target}"
    (
        eval "set --; ${set_sources}"
        set_deps=`nofake --error -R"${target} deps" "$@" | cmd_push_to_argv`
        eval "set --; ${set_deps}"
        <<indent "$@">>
        printf -- '\tnofake --error -R'"'"'build '"${target}'"' $^ | $(SH)\n\n'
    )
done
@

<<generate Makefile>>=
#!/bin/sh
set -eu
SH=${SH:-sh -eu}; export SH
<<function cmd_push_to_argv>>
<<function list_set_sources>>
<<function indent_args>>
printf -- '\n# automatically generated from <<Makefile prefix>>.nw\n\n'
set_sources=`list_set_sources`
printf -- 'SH = %s\n\n' "${SH}"
<<output PRIORITY_TARGETS=>>
<<output TARGETS=>>
printf -- 'ALL_TARGETS = $(PRIORITY_TARGETS) $(TARGETS)\n\n'
<<output all:>>
printf -- '.PHONY: touch\ntouch:\n\t-touch $(ALL_TARGETS)\n\n'
printf -- '.PHONY: clean\nclean:\n\t-rm -f $(ALL_TARGETS)\n'
@

<<generate build.sh>>=
#!/bin/sh
set -eu
CHMOD='chmod 0555' nofake.sh --error -Rbuild.sh -obuild.sh <<Makefile prefix>>.nw
@

<<build.sh>>=
#!/bin/sh
# automatically generated from <<Makefile prefix>>.nw
set -eu
SH=${SH:-sh -eu}; export SH
nofake --error <<Makefile prefix>>.nw | ${SH}
make -f <<Makefile prefix>>
@
