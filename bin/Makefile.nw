
Limit the responsibilities of Makefile and delegate the heavy work back to
sh/nofake as soon as possible.

To generate/update Makefile, simply do:

    nofake Makefile.nw | sh > Makefile

<<sources>>=
Makefile.nw create-config.nw nofake-exec.nw repl.nw git-last-modified.nw
@

<<*>>=
#!/bin/sh
set -eu
SH=${SH:-sh}; export SH
nofake --error -R'generate Makefile' <<sources>> | "${SH}" -eu
@

<<generate Makefile>>=
#!/bin/sh
set -eu
printf -- '\n# automatically generated from Makefile.nw\n\n'
printf -- 'all: \\\n'
set --
<<targets>>
<<indent "$@">>
printf -- "\n"
for target; do
    printf '%s: ' "${target}"
    nofake --error -R"${target} deps" <<sources>>
    printf "\tnofake --error -R'build ${target}' \$^ | sh -eu\n\n"
done
@

<<indent "$@">>=
perl -le'
    sub backslash(){ scalar(@ARGV) ? q{ \\} : q{} }
    while (my @a = splice(@ARGV, 0, 3)) {
        print(q{    }, join(q{ }, @a), backslash);
    }' -- "$@"
@
