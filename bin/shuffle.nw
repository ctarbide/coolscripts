
<<sort and select>>=
LC_ALL=C sort | perl -lpe's,^.*?\t.*?\t,,'
@

noseq is ~30% faster, but requires a stable sort, see test-shuffle-noseq.sh

<<sort and select, noseq>>=
LC_ALL=C sort -s -k 1,1 | perl -lpe's,^.*?\t,,'
@

<<shuffle.sh>>=
<<shuffle.sh preamble>>
"${thisdir}/random-prefix.sh" -k "${key}" | <<sort and select>>
@

<<shuffle-noseq.sh>>=
<<shuffle.sh preamble>>
"${thisdir}/random-prefix-noseq.sh" -k "${key}" | <<sort and select, noseq>>
@

<<shuffle.sh preamble>>=
<<sh preamble>>
die(){ ev=$1; shift; for msg in "$@"; do echo "${msg}"; done; exit "${ev}"; }

thispath=`perl -MCwd=realpath -le'print(realpath(\$ARGV[0]))' -- "${0}"`
thisdir=${thispath%/*}

key=

while [ $# -gt 0 ]; do
    case "${1}" in
        -k|--key) key=${2}; shift ;;
        --key=*) key=${1#*=} ;;
        -k*) key=${1#??} ;;

        --) ;; # no-op
        *)
            echo "${0##*/}: Unrecognized option '${1}'." 1>&2
            exit 1
            ;;
    esac
    shift
done

if [ x"${key}" = x- ]; then
    die 1 "Error, standard input is reserved for lines that will be shuffled."
fi

if [ x"${key}" = x ]; then
    die 1 "Error, missing key."
fi

if [ ! -r "${key}" ]; then
    die 1 "Error, key does not exist or cannot be read."
fi
@

first column ok, stable maybe

<<sort and select, noseq NAIVE 1>>=
LC_ALL=C sort -k 1,1 | perl -lpe's,^.*?\t,,'
@

stable ok, whole line fail

<<sort and select, noseq NAIVE 2>>=
LC_ALL=C sort -s | perl -lpe's,^.*?\t,,'
@

test if 'sort -s' is indeed stable

<<test-shuffle-noseq.sh>>=
<<sh preamble>>
k=/tmp/test$$key
d=/tmp/test$$data
echo -n 1 >"${k}"
perl -le'@a = reverse(map {chr} 33..126); print for @a' >"${d}"
echo
echo the two lines below must match
random-prefix.sh -k "${k}" <"${d}" | perl -lpe's,^[\w]{15},,' | <<sort and select>> | sha256sum
random-prefix-noseq.sh -k "${k}" <"${d}" | perl -lpe's,^[\w]{15},,' | <<sort and select, noseq>> | sha256sum
echo
echo 'failure example, line below may not match, depends on sort stability'
random-prefix-noseq.sh -k "${k}" <"${d}" | perl -lpe's,^[\w]{15},,' | <<sort and select, noseq NAIVE 1>> | sha256sum
echo
echo 'failure example, line below fails'
random-prefix-noseq.sh -k "${k}" <"${d}" | perl -lpe's,^[\w]{15},,' | <<sort and select, noseq NAIVE 2>> | sha256sum
rm -f "${k}" "${d}"
@

<<sh preamble>>=
#!/bin/sh
set -eu
@

<<*>>=
<<sh preamble>>
CHMOD='chmod 0555' nofake.sh -Rshuffle.sh -oshuffle.sh shuffle.nw
CHMOD='chmod 0555' nofake.sh -Rshuffle-noseq.sh -oshuffle-noseq.sh shuffle.nw
CHMOD='chmod 0555' nofake.sh -Rtest-shuffle-noseq.sh -otest-shuffle-noseq.sh shuffle.nw
@
