
nofake shell-tips.nw

<<*>>=
CHMOD='chmod 0444' nofake.sh --error -L -R.zshrc shell-tips.nw -o ~/.zshrc
CHMOD='chmod 0444' nofake.sh --error -L -R.tmux.conf shell-tips.nw -o ~/.tmux.conf
@

<<.zshrc>>=
# generated from shell-tips.nw
<<zsh-newuser-install snippet>>
<<zsh options>>
<<zsh prompts>>
<<README.txt install snippet>>
<<this is also cool>>
<<set MANPATH>>
<<set LS_COLORS>>
<<common aliases>>
<<git aliases>>
<<perl5 local::lib>>
<<set ~/local>>
<<exports>>
@

<<zsh options>>=
setopt histignorespace
@

<<common aliases>>=
alias ls='ls --color=auto -F'
alias ll='ls -alhF'

alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'

alias rm-tilde='rm -fv *~'
alias emacs=mg

alias localstamp="date '+%Y-%m-%d_%Hh%Mm%S'"

alias head20='head -n20'
alias head30='head -n30'
@

<<git aliases>>=
alias git-repack-and-prune='git repack -d && git prune'
@

<<exports>>=
export PATH
@

Nice, small and fast emacs-like editors.

<<exports>>=
# EDITOR=em
# EDITOR=mg
EDITOR=jove
export EDITOR
@

<<README.txt install snippet>>=
is_path_element(){
    perl -e'do { exit(0) if $_ eq $ARGV[0] } for split(q{:}, $ENV{PATH}); exit(1)' -- "$@"
}

can_be_added_to_path(){
    test -d "${1}" && ! is_path_element "${1}"
}

if can_be_added_to_path "${HOME}/Downloads/coolscripts/bin"; then
    PATH=${HOME}/Downloads/coolscripts/bin:${PATH}
fi
@

Extend the PATH handling idea to LD_LIBRARY_PATH and MANPATH.

<<this is also cool>>=
is_ld_lib_path_element(){
    perl -e'do { exit(0) if $_ eq $ARGV[0] } for split(q{:}, $ENV{LD_LIBRARY_PATH}); exit(1)' -- "$@"
}

can_be_added_to_ld_lib_path(){
    test -d "${1}" && ! is_ld_lib_path_element "${1}"
}

is_manpath_element(){
    perl -e'do { exit(0) if $_ eq $ARGV[0] } for split(q{:}, $ENV{MANPATH}); exit(1)' -- "$@"
}

can_be_added_to_manpath(){
    test -d "${1}" && ! is_manpath_element "${1}"
}
@

<<exports>>=
export LD_LIBRARY_PATH MANPATH
@

<<set MANPATH>>=
if can_be_added_to_manpath /usr/local/share/man; then
    MANPATH=/usr/local/share/man${MANPATH:+:${MANPATH}}
fi

if can_be_added_to_manpath /usr/share/man; then
    MANPATH=/usr/share/man${MANPATH:+:${MANPATH}}
fi
@

<<set ~/local>>=
if can_be_added_to_path "${HOME}/local/bin"; then
    PATH=${HOME}/local/bin:${PATH}
fi

if can_be_added_to_ld_lib_path "${HOME}/local/lib"; then
    LD_LIBRARY_PATH=${HOME}/local/lib${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
fi

if can_be_added_to_manpath "${HOME}/local/share/man"; then
    MANPATH=${HOME}/local/share/man${MANPATH:+:${MANPATH}}
fi
@

<<exports>>=
export LS_COLORS
@

<<set LS_COLORS>>=
LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:'
@

- https://zsh.sourceforge.io/Doc/Release/Prompt-Expansion.html

<<zsh prompts>>=
# default prompt
PROMPT='%F{blue}%~%f %# '

alias small-prompt='PS1='"'"'%F{blue}.../%1d%f %# '"'"
alias medium-prompt='PS1='"'"'%F{blue}.../%2d%f %# '"'"
alias large-prompt='PS1='"'"'%F{blue}%~%f %# '"'"
alias 80cols-prompt='PS1='"'"'%F{blue}%80<...<%~%f %# '"'"

alias substr20-prompt='PS1='"'"'%F{blue}%20>>%~%>> ... %20<<%2d%<<%f %# '"'"''
alias substr30-prompt='PS1='"'"'%F{blue}%30>>%~%>> ... %30<<%2d%<<%f %# '"'"''
alias substr40-prompt='PS1='"'"'%F{blue}%40>>%~%>> ... %40<<%2d%<<%f %# '"'"''
alias substr50-prompt='PS1='"'"'%F{blue}%50>>%~%>> ... %50<<%2d%<<%f %# '"'"''
@

<<perl5 local::lib>>=
is_perl5lib_element(){
    perl -e'do { exit(0) if $_ eq $ARGV[0] } for split(q{:}, $ENV{PERL5LIB}); exit(1)' -- "$@"
}

perl5_local_lib_home=${HOME}/perl5
perl5_local_lib_test=${perl5_local_lib_home}/lib/perl5

if [ -d "${perl5_local_lib_test}" ]; then
    if ! is_perl5lib_element "${perl5_local_lib_test}"; then
        PERL5LIB=${perl5_local_lib_test}${PERL5LIB:+:${PERL5LIB}}
        PERL_LOCAL_LIB_ROOT=${PERL_LOCAL_LIB_ROOT:+${PERL_LOCAL_LIB_ROOT}:}${perl5_local_lib_home}
        export PERL5LIB PERL_LOCAL_LIB_ROOT

        PERL_MB_OPT="--install_base ${perl5_local_lib_home}"
        PERL_MM_OPT=INSTALL_BASE=${perl5_local_lib_home}
        export PERL_MB_OPT PERL_MM_OPT
    fi
fi

# local perl5 bin
if can_be_added_to_path "${perl5_local_lib_home}/bin"; then
    PATH=${perl5_local_lib_home}/bin:${PATH}
fi
@

PipeWire, Alsa and JACK.

<<DISABLED exports>>=
PIPEWIRE_RUNTIME_DIR="/tmp/pipewire-`id -u`"
export PIPEWIRE_RUNTIME_DIR
@

PipeWire pulseaudio emulation.

A previous version used:

    PULSE_SERVER=${PULSE_RUNTIME_PATH}/pulse/native

<<DISABLED exports>>=
PULSE_RUNTIME_PATH="/tmp/pipewire-pulse-`id -u`"
PULSE_SERVER=${PULSE_RUNTIME_PATH}/native
export PULSE_RUNTIME_PATH PULSE_SERVER
@

<<exports>>=
LIBVIRT_DEFAULT_URI=qemu:///system
export LIBVIRT_DEFAULT_URI
@

<<zsh-newuser-install snippet>>=
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
bindkey -e
# End of lines configured by zsh-newuser-install
@

<<.tmux.conf>>=
# https://stackoverflow.com/questions/72539284/how-to-extend-the-length-of-session-name-in-tmux
set -g status-left-length 20

# https://www.golinuxcloud.com/tmux-config/
# Set bind key to reload configuration file
bind r source-file ~/.tmux.conf \; display â€‹"Reloaded!"
# splitting panes with | and -
bind | split-window -h
bind - split-window -v
# Enable mouse support
#set -g mouse on

# https://unix.stackexchange.com/questions/210174/set-the-active-tmux-tab-color
# works with tmux 3.3a
set-window-option -g window-status-style bg=green,fg=black
set-window-option -g window-status-current-style bg=green,fg=blue
@
